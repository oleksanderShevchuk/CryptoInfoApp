<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:oxy="http://oxyplot.org/wpf">

    <!-- Define light theme colors -->
    <Color x:Key="PrimaryColor">#81a9d4</Color>
    <!-- Secondary -->
    <Color x:Key="SecondaryColor">#6089b5</Color>
    <!-- Lighter -->
    <Color x:Key="LighterColor">#b2ceed</Color>
    <!-- White -->
    <Color x:Key="WhiteColor">White</Color>
    <!-- Black -->
    <Color x:Key="BlackColor">Black</Color>
    <!-- Darker -->
    <Color x:Key="DarkerColor">#416d9c</Color>
    <!-- Light gray -->
    <Color x:Key="LightGrayColor">LightGray</Color>
    <!-- Hover -->
    <Color x:Key="HoverColor">#315a87</Color>
    <Color x:Key="LightBlueColor">#a3c2e3</Color>
    <!--TextColor -->
    <Color x:Key="TextColor">#FF000000</Color>
    <Color x:Key="DetailsViewColor">#DEE7F7</Color>
    <Color x:Key="ChartColor">#AEC4EA</Color>

    <!-- Define brushes based on the colors -->
    <SolidColorBrush x:Key="PrimaryBrush" Color="{StaticResource PrimaryColor}"/>
    <SolidColorBrush x:Key="SecondaryBrush" Color="{StaticResource SecondaryColor}"/>
    <SolidColorBrush x:Key="WhiteBrush" Color="{StaticResource WhiteColor}"/>
    <SolidColorBrush x:Key="BlackBrush" Color="{StaticResource BlackColor}"/>
    <SolidColorBrush x:Key="DarkerBrush" Color="{StaticResource DarkerColor}"/>
    <SolidColorBrush x:Key="LighterBrush" Color="{StaticResource LighterColor}"/>
    <SolidColorBrush x:Key="LightGrayBrush" Color="{StaticResource LightGrayColor}"/>
    <SolidColorBrush x:Key="HoverBrush" Color="{StaticResource HoverColor}"/>
    <SolidColorBrush x:Key="LightBlueBrush" Color="{StaticResource LightBlueColor}"/>
    <SolidColorBrush x:Key="TextBrush" Color="{StaticResource TextColor}"/>
    <SolidColorBrush x:Key="DetailsBrush" Color="{StaticResource DetailsViewColor}"/>
    <SolidColorBrush x:Key="ChartBrush" Color="{StaticResource ChartColor}"/>

    <Style TargetType="DockPanel">
        <Setter Property="Background" Value="{StaticResource DetailsBrush}"/>
    </Style>
    
    <Style TargetType="DataGridCell">
        <Setter Property="BorderThickness" Value="0"/>
    </Style>

    <Style TargetType="TextBlock">
        <Setter Property="Foreground" Value="{StaticResource TextBrush}"/>
    </Style>


    <Style TargetType="Border" x:Key="BorderStyle">
        <Setter Property="Background" Value="{StaticResource LightBlueBrush}"/>
    </Style>

    <Style x:Key="CenteredCellStyle" TargetType="TextBlock">
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>

    <Style TargetType="Button" x:Key="WindowControlButtonStyle">
        <Setter Property="FontFamily" Value="Segoe MDL2 Assets" />
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="Transparent" BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true"
                                CornerRadius="2160">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PrimaryBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource LighterBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Label" x:Key="LabelStyle">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"></Setter>
    </Style>

    <Style TargetType="TextBox" x:Key="TextBoxStyle">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="TextBox">
                    <Border BorderBrush="{StaticResource SecondaryBrush}"
                            BorderThickness="3"
                            Background="{StaticResource WhiteBrush}"
                            CornerRadius="20"
                            Padding="5 0 0 0">
                        <ScrollViewer x:Name="PART_ContentHost"
                                      SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsFocused" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                        <Trigger Property="IsFocused" Value="True">
                            <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="ButtonStyle">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{StaticResource SecondaryBrush}" BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true"
                                CornerRadius="20">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DarkerBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource HoverBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="RadioButton" x:Key="MenuButtonStyle">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="FontSize" Value="20"/>
        <Setter Property="Height" Value="60"/>
        <Setter Property="Margin" Value="0, 0, 0, 5"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="RadioButton">
                    <Border x:Name="border" Background="{StaticResource SecondaryBrush}" BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true"
                                CornerRadius="0, 20, 20, 0">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="Center"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PrimaryBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#fca22d"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="8,0,0,0"/>
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="true"/>
                                <Condition Property="IsChecked" Value="False"/>
                            </MultiTrigger.Conditions>
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DarkerBrush}"/>
                        </MultiTrigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource PrimaryBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="#fca22d"/>
                            <Setter Property="BorderThickness" TargetName="border" Value="8,0,0,0"/>
                        </Trigger>
                        <DataTrigger Binding="{Binding Source={x:Static Application.Current}, Path=MainWindow.WindowState}" Value="Maximized">
                            <Setter Property="Margin" Value="7,0,0,5"/>
                        </DataTrigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Border" x:Key="PageStyle">
        <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
        <Setter Property="CornerRadius" Value="20"/>
        <Setter Property="Margin" Value="0 0 20 20"/>
    </Style>

    <!--#region ScrollViewer Styles -->

    <Style TargetType="ScrollViewer" x:Key="ScrollViewerStyle">
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                    <Grid>

                        <ScrollContentPresenter Content="{TemplateBinding ScrollViewer.Content}"/>

                        <ScrollBar Name="PART_VerticalScrollBar"
                                   HorizontalAlignment="Right"
                                   Value="{TemplateBinding VerticalOffset}"
                                   Maximum="{TemplateBinding ScrollableHeight}"
                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"
                                   Style="{DynamicResource ScrollBarStyle}"
                                   Margin="0, 32, 4, 32"/>

                        <ScrollBar Name="PART_HorizontalScrollBar"
                                   VerticalAlignment="Bottom"
                                   Orientation="Horizontal"
                                   Value="{TemplateBinding HorizontalOffset}"
                                   Maximum="{TemplateBinding ScrollableWidth}"
                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"
                                   Style="{DynamicResource ScrollBarStyle}"
                                   Margin="32, 0, 32, 4"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ScrollBar}" x:Key="ScrollBarStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Style.Triggers>

            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid>

                                <Border x:Name="border"
                                        CornerRadius="8"
                                        Background="Transparent" />

                                <Track Name="PART_Track" 
                                       IsDirectionReversed="False">

                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageLeftCommand"
                                                      Style="{DynamicResource ScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>

                                    <Track.Thumb>
                                        <Thumb x:Name="thumb" Style="{DynamicResource ScrollBarThumb}"
                                               Height="12"
                                               Opacity="0.75"/>
                                    </Track.Thumb>

                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageRightCommand"
                                                      Style="{DynamicResource ScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>

                                </Track>

                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource LightGrayBrush}"/>
                                    <Setter Property="Opacity" TargetName="border" Value="0.3"/>
                                    <Setter Property="Height" TargetName="thumb" Value="20"/>
                                    <Setter Property="Opacity" TargetName="thumb" Value="0.95"/>
                                    <Setter Property="Cursor" Value="SizeWE"/>
                                </Trigger>

                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>

            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Height" Value="Auto" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="{x:Type ScrollBar}">
                            <Grid>

                                <Border x:Name="border"
                                        CornerRadius="8"
                                        Background="Transparent"/>

                                <Track Name="PART_Track"
                                       IsDirectionReversed="true">

                                    <Track.DecreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageUpCommand"
                                                      Style="{DynamicResource ScrollBarPageButton}"/>
                                    </Track.DecreaseRepeatButton>

                                    <Track.Thumb>
                                        <Thumb x:Name="thumb" Style="{DynamicResource ScrollBarThumb}"
                                               Width="12"
                                               Opacity="0.75"/>
                                    </Track.Thumb>

                                    <Track.IncreaseRepeatButton>
                                        <RepeatButton Command="ScrollBar.PageDownCommand"
                                                      Style="{DynamicResource ScrollBarPageButton}"/>
                                    </Track.IncreaseRepeatButton>

                                </Track>

                            </Grid>

                            <ControlTemplate.Triggers>
                                <Trigger Property="IsMouseOver" Value="True">
                                    <Setter Property="Background" TargetName="border" Value="{StaticResource LightGrayBrush}"/>
                                    <Setter Property="Opacity" TargetName="border" Value="0.3"/>
                                    <Setter Property="Width" TargetName="thumb" Value="20"/>
                                    <Setter Property="Opacity" TargetName="thumb" Value="0.95"/>
                                    <Setter Property="Cursor" Value="SizeNS"/>
                                </Trigger>

                            </ControlTemplate.Triggers>

                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="ScrollBarThumb">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border CornerRadius="6"
                            Background="{StaticResource HoverBrush}"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton"
       TargetType="{x:Type RepeatButton}">
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!--#endregion-->

    <!--#region Table Styles-->

    <Style x:Key="MarketsListViewStyle" TargetType="ListView">
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="Padding" Value="0"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style x:Key="MarketGridViewColumnStyle" TargetType="GridViewColumnHeader">
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
    </Style>

    <Style x:Key="HeaderStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="FontWeight" Value="Bold"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <!-- Стиль для текстових значень -->
    <Style x:Key="ValueStyle" TargetType="TextBlock">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Margin" Value="5"/>
    </Style>

    <Style TargetType="{x:Type Thumb}" x:Key="HeaderThumbStyle">
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="true" />
        <Setter Property="IsTabStop" Value="false" />
        <Setter Property="Focusable" Value="false" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border Background="{StaticResource HoverBrush}"
                            Width="2"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridColumnHeadersPresenterStyle" TargetType="{x:Type DataGridColumnHeadersPresenter}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridColumnHeadersPresenter}">
                    <Grid>

                        <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}">
                            <ItemsPresenter.Resources>
                                <Style TargetType="{x:Type DataGridColumnHeader}">
                                    <Setter Property="OverridesDefaultStyle" Value="True"/>
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="{x:Type DataGridColumnHeader}">
                                                <Border BorderThickness="0"
                                                        BorderBrush="Transparent">

                                                    <Grid>
                                                        <ContentPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                                                          RecognizesAccessKey="True"
                                                                          VerticalAlignment="Center"
                                                                          HorizontalAlignment="Center"
                                                                          TextElement.FontSize="16"
                                                                          Margin="8, 14"
                                                                          Cursor="Hand"/>

                                                        <Thumb x:Name="PART_LeftHeaderGripper"
                                                               Style="{DynamicResource HeaderThumbStyle}"
                                                               HorizontalAlignment="Left"
                                                               Cursor="SizeWE"/>
                                                    </Grid>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ItemsPresenter.Resources>
                        </ItemsPresenter>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollContentPresenterStyle" TargetType="{x:Type ScrollContentPresenter}">
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
    </Style>

    <Style x:Key="DataGridRowStyle" TargetType="{x:Type DataGridRow}">
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="Cursor" Value="Hand"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridRow}">
                    <Border x:Name="DGR_Border"
                            Height="46"
                            CornerRadius="15"
                            BorderThickness="0"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">

                        <SelectiveScrollingGrid>
                            <SelectiveScrollingGrid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition Width="*"/>
                            </SelectiveScrollingGrid.ColumnDefinitions>
                            <SelectiveScrollingGrid.RowDefinitions>
                                <RowDefinition Height="*"/>
                                <RowDefinition Height="Auto"/>
                            </SelectiveScrollingGrid.RowDefinitions>
                            <DataGridCellsPresenter Grid.Column="1"
                                                ItemsPanel="{TemplateBinding ItemsControl.ItemsPanel}"
                                                SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                        </SelectiveScrollingGrid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="DGR_Border" Property="Background" Value="{StaticResource DarkerBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DataGridCellStyle" TargetType="{x:Type DataGridCell}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGridCell}">
                    <Grid Background="{TemplateBinding Background}">
                        <ContentPresenter VerticalAlignment="Center"
                                          Margin="8, 0, 0, 0"/>
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsSelected" Value="True">
                <Setter Property="Background" Value="Transparent" />
                <Setter Property="BorderBrush" Value="Transparent" />
                <Setter Property="Foreground" Value="{StaticResource WhiteBrush}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
        <Setter Property="AutoGenerateColumns" Value="False"/>
        <Setter Property="HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="Background" Value="Transparent"/>
        <Setter Property="BorderBrush" Value="Transparent"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Setter Property="CanUserAddRows" Value="False"/>
        <Setter Property="CanUserDeleteRows" Value="False"/>
        <Setter Property="CanUserReorderColumns" Value="True"/>
        <Setter Property="CanUserResizeColumns" Value="True"/>
        <Setter Property="CanUserResizeRows" Value="False"/>
        <Setter Property="CanUserSortColumns" Value="True"/>
        <Setter Property="RowDetailsVisibilityMode" Value="Collapsed"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        <Setter Property="FontFamily" Value="Varela Round"/>
        <Setter Property="GridLinesVisibility" Value="Horizontal"/>
        <Setter Property="IsReadOnly" Value="True"/>
        <Setter Property="SelectionUnit" Value="FullRow"/>
        <Setter Property="SelectionMode" Value="Single"/>
        <Setter Property="HeadersVisibility" Value="Column"/>

        <Setter Property="RowStyle" Value="{DynamicResource DataGridRowStyle}"/>
        <Setter Property="CellStyle" Value="{DynamicResource DataGridCellStyle}"/>

        <Setter Property="HorizontalGridLinesBrush" Value="{StaticResource DarkerBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="FontSize" Value="14"/>
        <Setter Property="RowBackground" Value="Transparent"/>

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type DataGrid}">

                    <Border Background="Transparent"
                            BorderBrush="Transparent"
                            BorderThickness="0"
                            Padding="0"
                            SnapsToDevicePixels="True">

                        <ScrollViewer x:Name="DG_ScrollViewer"
                                      Focusable="false"
                                      Style="{DynamicResource ScrollViewerStyle}">

                            <ScrollViewer.Template>

                                <ControlTemplate TargetType="{x:Type ScrollViewer}">
                                    <Grid Margin="4">
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="Auto"/>
                                            <RowDefinition Height="*"/>
                                        </Grid.RowDefinitions>

                                        <Border Background="{StaticResource HoverBrush}"
                                                Grid.Row="0"
                                                Opacity="0.5"
                                                CornerRadius="20, 20, 0, 0"/>

                                        <DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter"
                                                                        Style="{DynamicResource DataGridColumnHeadersPresenterStyle}"
                                                                        Grid.Row="0"
                                                                        Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>

                                        <ScrollContentPresenter x:Name="PART_ScrollContentPresenter"
                                                                Style="{DynamicResource ScrollContentPresenterStyle}"
                                                                Grid.Row="1"
                                                                CanContentScroll="{TemplateBinding CanContentScroll}"/>

                                        <ScrollBar x:Name="PART_VerticalScrollBar"
                                                   Style="{DynamicResource ScrollBarStyle}"
                                                   Grid.Row="0"
                                                   Grid.RowSpan="2"
                                                   HorizontalAlignment="Right"
                                                   Margin="2, 32"
                                                   Maximum="{TemplateBinding ScrollableHeight}"
                                                   Orientation="Vertical"
                                                   Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportHeight}"
                                                   Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}"/>

                                        <ScrollBar x:Name="PART_HorizontalScrollBar"
                                                   Style="{DynamicResource ScrollBarStyle}"
                                                   Grid.Row="1"
                                                   VerticalAlignment="Bottom"
                                                   Margin="32, 2"
                                                   Maximum="{TemplateBinding ScrollableWidth}"
                                                   Orientation="Horizontal" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}"
                                                   ViewportSize="{TemplateBinding ViewportWidth}"
                                                   Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}"/>

                                    </Grid>
                                </ControlTemplate>
                            </ScrollViewer.Template>

                            <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>

                        </ScrollViewer>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

        <Style.Triggers>
            <MultiTrigger>

                <MultiTrigger.Conditions>

                    <Condition Property="IsGrouping" Value="true"/>
                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>

                </MultiTrigger.Conditions>

                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>

            </MultiTrigger>
        </Style.Triggers>
    </Style>

    <Style x:Key="RoundedBorderStyle" TargetType="Border">
        <Setter Property="Background" Value="{StaticResource LighterBrush}"/>
        <Setter Property="CornerRadius" Value="10"/>
        <Setter Property="Padding" Value="10"/>
        <Setter Property="Margin" Value="5"/>
    </Style>


    <Style x:Key="PlotViewStyle" TargetType="{x:Type oxy:PlotView}">
        <Setter Property="Background" Value="{StaticResource LighterBrush}"/>
    </Style>

    <!--#endregion-->

    <Style TargetType="Button" x:Key="LoadMoreStyle">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="{StaticResource SecondaryBrush}" BorderBrush="{StaticResource DarkerBrush}"
                                BorderThickness="5" SnapsToDevicePixels="true"
                                CornerRadius="20">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DarkerBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HoverBrush}"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="{StaticResource DarkerBrush}"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource HoverBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    
    <!--#region ComboBox Styles-->

    <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="Auto" />
            </Grid.ColumnDefinitions>

            <Border Grid.ColumnSpan="2"
                    Name="Border"
                    BorderBrush="{StaticResource SecondaryBrush}" 
                    CornerRadius="10"
                    BorderThickness="3" 
                    Background="{StaticResource WhiteBrush}" />

            <Border Grid.Column="1"
                    CornerRadius="0, 20, 20, 0"
                    Margin="10, 0, 20, 0"
                    BorderBrush="Transparent"
                    Name="ButtonBorder"
                    BorderThickness="0" 
                    Background="Transparent" />

            <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#545454"
            VerticalAlignment="Center" />
        </Grid>
        <ControlTemplate.Triggers>
            <Trigger Property="UIElement.IsMouseOver" Value="True">
                <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource PrimaryBrush}"/>
            </Trigger>
            <Trigger Property="ToggleButton.IsChecked" Value="True">
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="{StaticResource BlackBrush}"/>
            </Trigger>
            <Trigger Property="UIElement.IsEnabled" Value="False">
                <Setter Property="Shape.Fill" TargetName="Arrow" Value="#545454"/>
            </Trigger>
        </ControlTemplate.Triggers>
    </ControlTemplate>

    <Style x:Key="ComboBoxFlatStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
        <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
        <Setter Property="TextElement.Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
        <Setter Property="Control.Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBox">
                    <Grid>
                        <ToggleButton Name="ToggleButton" Grid.Column="2"
                                      ClickMode="Press" Focusable="False"
                                      IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                                      Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                        <ContentPresenter Name="ContentSite" Margin="10, 3, 23, 3" IsHitTestVisible="False"
                                          HorizontalAlignment="Left" VerticalAlignment="Center"                              
                                          Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                                          ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                                          ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>

                        <TextBox Name="PART_EditableTextBox" Margin="3, 5, 23, 5"                     
                                 IsReadOnly="{TemplateBinding IsReadOnly}"
                                 Visibility="Hidden" Background="Transparent"
                                 HorizontalAlignment="Left" VerticalAlignment="Center"
                                 Focusable="True" >
                            <TextBox.Template>
                                <ControlTemplate TargetType="TextBox" >
                                    <Border Name="PART_ContentHost" Focusable="False" />
                                </ControlTemplate>
                            </TextBox.Template>
                        </TextBox>

                        <Popup Name="Popup" Placement="Bottom"
                               Focusable="False" AllowsTransparency="True"
                               IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                               PopupAnimation="Slide">

                            <Grid Name="DropDown" SnapsToDevicePixels="True"
                                  MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                                  MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">

                                <Border Name="DropDownBorder"
                                        Background="{StaticResource WhiteBrush}"
                                        Margin="0, 1, 0, 0"
                                        CornerRadius="20"
                                        BorderThickness="2" 
                                        BorderBrush="{StaticResource SecondaryBrush}"/>

                                <ScrollViewer Style="{DynamicResource ScrollViewerStyle}" SnapsToDevicePixels="True">
                                    <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained"
                                                    Name="ItemPresenter"
                                                    Margin="10"/>
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>

                    <ControlTemplate.Triggers>
                        <Trigger Property="ItemsControl.HasItems" Value="False">
                            <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                        </Trigger>
                        <Trigger Property="UIElement.IsEnabled" Value="False">
                            <Setter Property="TextElement.Foreground" Value="{StaticResource BlackBrush}"/>
                        </Trigger>
                        <Trigger Property="ItemsControl.IsGrouping" Value="True">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                        </Trigger>
                        <Trigger Property="ComboBox.IsEditable" Value="True">
                            <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                            <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                            <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="{x:Type ComboBoxItem}">
        <Setter Property="OverridesDefaultStyle" Value="True"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                    <Border Background="{TemplateBinding Background}"
                            Padding="10, 4"
                            CornerRadius="10">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="{StaticResource PrimaryBrush}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style TargetType="Button" x:Key="SwitchThemeButtonStyle">
        <Setter Property="Foreground" Value="Black"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border x:Name="border" Background="Transparent" BorderBrush="Transparent"
                                BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true"
                                CornerRadius="20">
                        <ContentPresenter x:Name="contentPresenter" Focusable="False"
                                              HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                              Margin="{TemplateBinding Padding}" RecognizesAccessKey="True"
                                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"
                                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#81a9d4"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                        <Trigger Property="IsPressed" Value="true">
                            <Setter Property="Background" TargetName="border" Value="#284d75"/>
                            <Setter Property="BorderBrush" TargetName="border" Value="Transparent"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Style for ComboBox -->
    <Style TargetType="ComboBox" x:Key="LanguageComboBoxStyle">
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Margin" Value="10"/>
    </Style>

    <!-- Style for ComboBox Items -->
    <Style TargetType="ComboBoxItem" x:Key="LanguageComboBoxItemStyle">
        <Setter Property="FontSize" Value="16"/>
        <Setter Property="Height" Value="30"/>
        <Setter Property="Padding" Value="10,0"/>
        <Setter Property="Background" Value="{StaticResource WhiteBrush}"/>
        <Setter Property="Foreground" Value="{StaticResource BlackBrush}"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="ComboBoxItem">
                    <Border x:Name="Border"
                            Background="{TemplateBinding Background}"
                            SnapsToDevicePixels="True">
                        <ContentPresenter HorizontalAlignment="Left" VerticalAlignment="Center"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource SecondaryBrush}"/>
                        </Trigger>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" TargetName="Border" Value="{StaticResource LightBlueBrush}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>
